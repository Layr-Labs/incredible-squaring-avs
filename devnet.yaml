# yaml-language-server: $schema=https://github.com/Layr-Labs/avs-devnet/raw/refs/heads/main/schema.json
# Local devnet config file for the incredible-squaring-avs example
# This file can be used inside the incredible-squaring-avs repo to
# start a devnet with any local changes

deployments:

  - name: contract_registry
    repo: "."
    contracts_path: "contracts"
    script: script/DeployContractsRegistry.s.sol
    env:
      PRIVATE_KEY: "{{.keys.deployer_key.private_key}}"

  - name: eigenlayer
    repo: "."
    contracts_path: "contracts"
    script: script/DeployEigenLayerCore.s.sol
    env:
      PRIVATE_KEY: "{{.keys.deployer_key.private_key}}"
    output:
      eigenlayer_addresses: "script/deployments/core/3151908.json"
    addresses:
      allocationManager: eigenlayer_addresses:.addresses.allocationManager
      permissionController: eigenlayer_addresses:.addresses.permissionController
      rewardsCoordinator: eigenlayer_addresses:.addresses.rewardsCoordinator

  - name: incredible_squaring
    repo: "."
    contracts_path: "contracts"
    script: script/IncredibleSquaringDeployer.s.sol
    env:
      PRIVATE_KEY: "{{.keys.deployer_key.private_key}}"
    input:
      .: 
        - incredible-config
      script/deployments/core/: eigenlayer_addresses
    output:
      avs_addresses: "script/deployments/incredible-squaring/3151908.json"
    # Specify addresses to fetch from avs_addresses artifact
    addresses:
      serviceManager: avs_addresses:.addresses.IncredibleSquaringServiceManager
      taskManager: avs_addresses:.addresses.IncredibleSquaringTaskManager
      erc20MockStrategy: avs_addresses:.addresses.strategy
      operatorStateRetriever: avs_addresses:.addresses.operatorStateRetriever
      registryCoordinator: avs_addresses:.addresses.registryCoordinator
      instantSlasher: avs_addresses:.addresses.instantSlasher
    cmd: ["--config", "./incredible_squaring_config.json"]

services:
  - name: operator1
    image: "ko.local/operator/cmd/main.go:latest"
    build_cmd: KO_DOCKER_REPO=ko.local ko build operator/cmd/main.go --preserve-import-paths --local
    ports:
      node:
        number: 8080
        transport_protocol: "TCP"
        application_protocol: "http"
        wait: "3m"
    input:
      /usr/src/app/config-files/:
        - operator1-config
      /usr/src/app/keys/:  
        - keys-config
    env:
      OPERATOR_ECDSA_KEY_PASSWORD: ""
      OPERATOR_BLS_KEY_PASSWORD: ""
    cmd: ["--config", "/usr/src/app/config-files/operator-config.yaml"]



  - name: aggregator
    image: "ko.local/aggregator/cmd/main.go:latest"
    build_cmd: KO_DOCKER_REPO=ko.local ko build aggregator/cmd/main.go --preserve-import-paths --local
    ports:
      rpc:
        number: 8090
        transport_protocol: "TCP"
        application_protocol: "http"
    input:
      /usr/src/app/config-files/:
        - aggregator-config
        - avs_addresses
    cmd:
      - "--config"
      - "/usr/src/app/config-files/aggregator-config.yaml"
      - "--ecdsa-private-key"
      # NOTE: aggregator key-pair is hardcoded in the deployment scripts
      - "{{.keys.aggregator_key.private_key}}"
      - "--credible-squaring-deployment"
      - "/usr/src/app/config-files/3151908.json"


keys:
  # This generates new keypairs for each operator
  - name: deployer_key
    type: "ecdsa"
    address: "0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"
    private_key: "0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80"
  # This ensures the aggregator has funds
  - name: aggregator_key
    address: "0xa0Ee7A142d267C1f36714E4a8F75612F20a79720"
    private_key: "0x2a871d0798f97d79848a013d4936a73bf4cc922c825d33c1cf7073dff6d409c6"
artifacts:
  aggregator-config:
    files:
      aggregator-config.yaml:
        template: |
          # 'production' only prints info and above. 'development' also prints debug
          environment: production
          eth_rpc_url: {{.http_rpc_url}}
          eth_ws_url: {{.ws_rpc_url}}
          # address which the aggregator listens on for operator signed messages
          aggregator_server_ip_port_address: 0.0.0.0:8090

  operator1-config:
    files:
      operator-config.yaml:
        template: |
          production: True
          operator_address: {{.keys.deployer_key.address}}
          avs_registry_coordinator_address: {{.addresses.incredible_squaring.registryCoordinator}}
          operator_state_retriever_address: {{.addresses.incredible_squaring.operatorStateRetriever}}
          rewards_coordinator_address: {{.addresses.eigenlayer.rewardsCoordinator}}
          permission_controller_address: {{.addresses.eigenlayer.permissionController}}
          service_manager_address: {{.addresses.incredible_squaring.serviceManager}}
          allocation_manager_address: {{.addresses.eigenlayer.allocationManager}}
          instant_slasher_address: {{.addresses.incredible_squaring.instantSlasher}}
          eth_rpc_url: {{.http_rpc_url}}
          eth_ws_url: {{.ws_rpc_url}}
          ecdsa_private_key_store_path: /usr/src/app/keys/test.ecdsa.key.json
          bls_private_key_store_path: /usr/src/app/keys/test.bls.key.json
          aggregator_server_ip_port_address: aggregator:8090
          eigen_metrics_ip_port_address: "0.0.0.0:8081"
          enable_metrics: True
          node_api_ip_port_address: "0.0.0.0:8080"
          enable_node_api: True
          register_operator_on_startup: True
          token_strategy_addr: {{.addresses.incredible_squaring.erc20MockStrategy}}
          times_failing: 100
          operator_set_id: 0
          max_operator_count: 3
          kick_bips_of_operator_stake: 100
          kick_bips_of_total_stake: 1000
          minimum_stake: 0
          multiplier: 1


  incredible-config:
    files:
      incredible_squaring_config.json:
        static_file: "contracts/incredible_squaring_config.json"
  keys-config:
    files:
      test.ecdsa.key.json:
        static_file: "tests/keys/test.ecdsa.key.json"
      test.bls.key.json:
        static_file: "tests/keys/test.bls.key.json"

ethereum_package:
  additional_services:
    - blockscout
  network_params:
    seconds_per_slot: 12
